#!/bin/bash
[ $(uname -m) = "x86_64" ] || exit 0
if [ "${SCRAM}" = "" ] ; then SCRAM=scram ; fi

#No need to overirde LD_LIBRARY_PATH if SCRAM_VECTOR is not set of set to "default"
if [ "${SCRAM_VECTOR}" = "" ] || [ "${SCRAM_VECTOR}" = "default" ] ; then exit 0 ; fi
LD_ENV=$(${SCRAM} tool info gcc-cxxcompiler | grep '^LD_LIBRARY_PATH='):${LD_LIBRARY_PATH}
PATH_ENV=$(${SCRAM} tool info gcc-cxxcompiler | grep '^PATH='):${PATH}
eval "export $LD_ENV; export $PATH_ENV"
NATIVE_ARCH=$(gcc -march=native -Q --help=target | grep -- '^ *-march=' | sed 's|.*=\s*||')
SUPPORTED_ARCHS="$(${SCRAM} tool info self | grep '^SCRAM_VECTORIZE+=' | sed 's|.*=||')"
[ "${NATIVE_ARCH}" = "" ] && exit 0
[ "${SUPPORTED_ARCHS}" = "" ] && exit 0

if [ "${SCRAM_VECTOR}" = "auto" ] ; then
  if [ $(echo " ${SUPPORTED_ARCHS} " | grep " ${NATIVE_ARCH} " | wc -l) -eq 0 ] ; then
    echo "WARNING: Native architecure ${NATIVE_ARCH} does not match the supported archs '${SUPPORTED_ARCHS}'. Using default instruction set." 1>&2
    exit 0
 fi
 SCRAM_VECTOR="${NATIVE_ARCH}"
elif [ $(echo " ${SUPPORTED_ARCHS} " | grep " ${SCRAM_VECTOR} " | wc -l) -eq 0 ] ; then
  echo "WARNING: Selected architecture '${SCRAM_VECTOR}' does not match supported archs '${SUPPORTED_ARCHS}'. Using default instruction set." 1>&2
  exit 0
fi

echo "IMPORTANT: Setting CMSSW environment to use '${SCRAM_VECTOR}' instructions set." 1>&2
for d in $(${SCRAM} tool tag self LIBDIR) ; do
  v=""
  case $d in
    ${LOCALTOP}/* ) v=$d ;;
    * ) if [ -d $d/${SCRAM_VECTOR} ] ; then v=$d ; fi ;;
  esac
  if [ $v ] ; then
    echo "RUNTIME:path:replace:LD_LIBRARY_PATH=$d=$d/${SCRAM_VECTOR}:$d"
  fi
done
